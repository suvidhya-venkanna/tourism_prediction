name: Tourism Project Pipeline

on:
  push:
    branches:
      - main

jobs:

  register-dataset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tourism_prediction/deployment/requirements.txt
      - name: Upload Dataset to Hugging Face Hub
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python tourism_prediction/model_building/data_register.py

  data-prep:
    needs: register-dataset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tourism_prediction/deployment/requirements.txt
      - name: Run Data Preparation
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python tourism_prediction/model_building/prep.py

  model-training:
    needs: data-prep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tourism_prediction/deployment/requirements.txt
      - name: Start MLflow Server
        run: |
          nohup mlflow ui --host 0.0.0.0 --port 5000 &
          sleep 5
      - name: Train Model
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python tourism_prediction/model_building/train.py

  deploy-hosting:
    runs-on: ubuntu-latest
    needs: [model-training, data-prep, register-dataset]
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install huggingface_hub
      - name: Deploy Streamlit App to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python - <<EOF
          import os, shutil
          from huggingface_hub import HfApi

          space_id = "Suvidhya/tourism-app"  # ðŸ‘ˆ Your Hugging Face Space
          api = HfApi()

          # prepare a temp folder
          if os.path.exists("space_temp"):
              shutil.rmtree("space_temp")
          os.makedirs("space_temp", exist_ok=True)
          shutil.copy("tourism_prediction/deployment/app.py", "space_temp/app.py")
          shutil.copy("tourism_prediction/deployment/requirements.txt", "space_temp/requirements.txt")

          # upload to Space
          api.upload_folder(
              folder_path="space_temp",
              repo_id=space_id,
              repo_type="space"
          )
          EOF
